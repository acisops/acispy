#!/usr/bin/env python

from __future__ import print_function
import argparse
import acispy
from acispy.utils import calc_off_nom_rolls
import numpy as np
from Chandra.Time import DateTime

dont_use = ["q1","q2","q3","q4","power_cmd","datestart","datestop",
            "tstart","tstop","trans_keys","vid_board","pcad_mode",
            "clocking","fep_count"]

comps = ["fptemp_11","1dpamzt","1deamzt","1pdeaat"]

parser = argparse.ArgumentParser(description='Get a summary of the expected ACIS status given a load')
parser.add_argument("load", type=str, help='The load to get the status from')
parser.add_argument("--time", type=str, default="now", 
                    help='The time to check the status at (default: current time)')
args = parser.parse_args()

ds = acispy.ModelDataFromLoad(args.load, comps)
t = DateTime(args.time)
states = ds.states.get_states(t.date)
values = ds.model.get_values(t.date)

rolls = calc_off_nom_rolls(ds.states)
idx = np.searchsorted(ds.states["tstart"].value, t.secs)-1

print("Getting expected ACIS state at %s." % t.date)

for k, v in states.items():
    if k not in dont_use:
        print("%s: %s" % (k, v))
print("Off-nominal Roll: %g deg" % rolls[idx])
for k, v in values.items():
    print("%s: %s" % (k, v))
