#!/usr/bin/env python

import argparse
from acis import LoadReview

parser = argparse.ArgumentParser()
parser.add_argument("filename", type=str)
parser.add_argument("--no_check_errors", action="store_true")
parser.add_argument("--check-grating", action="store_true")
parser.add_argument("--check-subarray", action="store_true")
parser.add_argument("--check-dither", action="store_true")
args = parser.parse_args()

lr = LoadReview(args.filename)

print("Parsing Load Review %s." % str(lr))
print("="*60)

if not args.no_check_errors:
    print("Checking for errors...")
    lr.check_for_errors()
    print("="*60)

obsids_with = []
if args.check_grating:
    obsids_with += [("grating","==","LETG"),
                    ("grating","==","HETG")]
if args.check_subarray:
    obsids_with.append(("subarray","!=","NONE"))
if args.check_dither:
    obsids_with.append(("dither","!=","NORMAL"))

for check in obsids_with:
    print("Checking Load Review for %s %s %s " % check)
    obscat = lr.obscat.find_obsids_with(*check)
    if obscat is not None:
        print("There are %d ObsIDs with %s:" % (len(obscat), obscat.subset))
        for obsid in obscat:
            print(obsid)
    print("="*60)

print("Done parsing Load Review %s." % str(lr))




